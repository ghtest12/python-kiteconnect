#The script checks: 
#When the last four hourly candlesticks of a day are all positive how many are opened gap down, how many are successful in the first hour of next day, second hour of next day etc for next two day.
#Similarly it will check when the last four hourly candlesticks of a day are all negative also.
#This script will take some percetage for the last candlestick and check the results based on whether the 5 candlesticks are all positive or negative - Currently this is commented

import datetime
print(datetime.datetime.now(),"\n")

def checkallpositive(list1):
    # traverse in the list
    for val in list1:
        # compare with all the values
        # with val
        if val < 0:
            return False
    return True
def checkallnegative(list1):
    # traverse in the list
    for val in list1:
        # compare with all the values
        # with val
        if val > 0:
            return False
    return True
def getaverageheight(records):
    total_records = len(records)
    total_high = 0
    total_low = 0
    avg_candle_length = 0
    for record in records:
        total_high += record["high"]
        total_low += record["low"]
    avg_candle_length = (total_high - total_low)/total_records
    return avg_candle_length

def currentcandleheight(open,close):
    candle_length = open - close
    if(candle_length < 0):
        candle_length = (-1)*candle_length
    return candle_length
    

#BSE
dict_codes = {'ACC':'128104964','ADANIENT':'131225348','ADANIPORTS':'136427780','ADANIPOWER':'136472580','AJANTPHARM':'136276740','ALBK':'136314884','AMARAJABAT':'128002052','AMBUJACEM':'128108804','ANDHRABANK':'136299012','APOLLOHOSP':'130270468','APOLLOTYRE':'128224516','ARVIND':'128025860','ASHOKLEY':'128122116','ASIANPAINT':'128209924','AUROPHARMA':'134349828','AXISBANK':'136247044','BAJAJ-AUTO':'136442116','BAJAJFINSV':'136442372','BAJFINANCE':'128008708','BALKRISIND':'128602884','BALRAMCHIN':'128009732','BANKBARODA':'136226308','BANKINDIA':'136230148','BATAINDIA':'128011012','BEL':'128012548','BEML':'128012292','BERGEPAINT':'130426884','BHARATFIN':'136506372','BHARATFORG':'128126212','BHARTIARTL':'136308228','BHEL':'128026372','BIOCON':'136325892','BOSCHLTD':'128135684','BPCL':'128140036','BRITANNIA':'128211204','CADILAHC':'136274180','CANBK':'136315652','CANFINHOME':'130866180','CAPF':'136432132','CASTROLIND':'128222724','CEATLTD':'128224772','CENTURYTEX':'128010244','CESC':'128021508','CGPOWER':'128023812','CHENNPETRO':'128028164','CHOLAFIN':'130878212','CIPLA':'128022276','COALINDIA':'136519172','COLPAL':'128212484','CONCOR':'136024068','CUMMINSIND':'128122884','DABUR':'128024580','DALMIABHA':'136527108','DCBBANK':'136389636','DHFL':'130834436','DISHTV':'136406788','DIVISLAB':'136316932','DLF':'136414212','DRREDDY':'128031748','EICHERMOT':'129331204','ENGINERSIN':'136237572','EQUITAS':'138200068','ESCORTS':'128126724','EXIDEIND':'128022020','FEDERALBNK':'128120068','GAIL':'136231684','GLENMARK':'136267780','GMRINFRA':'136385028','GODFRYPHLP':'128041732','GODREJCP':'136300548','GODREJIND':'128041988','GRANULES':'136315396','GRASIM':'128076804','GSFC':'128176644','HAVELLS':'132442628','HCC':'128047364','HCLTECH':'136263940','HDFC':'128002564','HDFCBANK':'128046084','HEROMOTOCO':'128046596','HEXAWARE':'136225028','HINDALCO':'128112644','HINDPETRO':'128026628','HINDUNILVR':'128178180','HINDZINC':'128048132','IBULHSGFIN':'137161988','ICICIBANK':'136236548','ICICIPRULI':'138274052','IDBI':'128029700','IDEA':'136402436','IDFC':'136360708','IDFCBANK':'138095876','IFCI':'128027140','IGL':'136323588','INDIACEM':'135681284','INDIANB':'136400388','INDIGO':'138098692','INDUSINDBK':'136239876','INFIBEAM':'138190596','INFRATEL':'136912900','INFY':'128053508','IOC':'135927044','IRB':'136434436','ITC':'128224004','JETAIRWAYS':'136349956','JINDALSTEL':'136265220','JISLJALEQS':'128056068','JPASSOCIAT':'136328196','JSWSTEEL':'128058372','JUBLFOOD':'136487684','JUSTDIAL':'137125892','KAJARIACER':'128059652','KOTAKBANK':'128063236','KPIT':'136294404','KSCL':'136422148','KTKBANK':'136358916','L&TFH':'136580868','LICHSGFIN':'128064772','LT':'128130564','LUPIN':'128065796','M&M':'128133124','M&MFIN':'136376324','MANAPPURAM':'135990532','MARICO':'136100356','MARUTI':'136320004','MCX':'136727300','MFSL':'128069380','MGL':'138228996','MINDTREE':'136401668','MOTHERSUMI':'132437508','MRF':'128074244','MRPL':'128027908','MUTHOOTFIN':'136549892','NATIONALUM':'136251908','NBCC':'136783108','NCC':'128075268','NESTLEIND':'128202244','NHPC':'136473092','NIITTECH':'136330500','NMDC':'134750980','NTPC':'136334084','OFSS':'136311300','OIL':'136475140','ONGC':'128079876','ORIENTBANK':'128080644','PAGEIND':'136403716','PCJEWELLER':'136911108','PEL':'128077316','PETRONET':'136325636','PFC':'136399364','PIDILITIND':'128084740','PNB':'136310020','POWERGRID':'136421892','PTC':'136326148','PVR':'136368388','RAMCOCEM':'128066564','RAYMOND':'128084484','RBLBANK':'138256644','RCOM':'136374276','RECLTD':'136436484','RELCAPITAL':'128028420','RELIANCE':'128083204','RELINFRA':'128099844','REPCOHOME':'137042436','RPOWER':'136432388','SAIL':'128028932','SBIN':'128028676','SHREECEM':'128099076','SIEMENS':'128140804','SOUTHBANK':'136247812','SREINFRA':'134081540','SRF':'128974340','SRTRANSFIN':'130871812','STAR':'136327940','SUNPHARMA':'134327044','SUNTV':'136379652','SUZLON':'136362756','SYNDIBANK':'136262660','TATACHEM':'128197124','TATACOMM':'128123652','TATAELXSI':'128104452','TATAGLOBAL':'128204804','TATAMOTORS':'128145924','TATAMTRDVR':'145920260','TATAPOWER':'128102404','TATASTEEL':'128120324','TCS':'136330244','TECHM':'136385284','TITAN':'128029188','TORNTPHARM':'128107524','TORNTPOWER':'136391428','TV18BRDCST':'136396804','TVSMOTOR':'136279812','UBL':'136314372','UJJIVAN':'138207748','ULTRACEMCO':'136329732','UNIONBANK':'136314116','UPL':'131089924','VEDL':'128075524','VGUARD':'136435972','VOLTAS':'128147204','WIPRO':'129967364','WOCKPHARMA':'136268804','YESBANK':'136357892','ZEEL':'129417476'}
#NSE
#dict_codes = {'ACC':'5633','ADANIENT':'6401','ADANIPORTS':'3861249','ADANIPOWER':'4451329','AJANTPHARM':'2079745','ALBK':'2760193','AMARAJABAT':'25601','AMBUJACEM':'325121','ANDHRABANK':'2524673','APOLLOHOSP':'40193','APOLLOTYRE':'41729','ARVIND':'49409','ASHOKLEY':'54273','ASIANPAINT':'60417','AUROPHARMA':'70401','AXISBANK':'1510401','BAJAJ-AUTO':'4267265','BAJAJFINSV':'4268801','BAJFINANCE':'81153','BALKRISIND':'85761','BALRAMCHIN':'87297','BANKBARODA':'1195009','BANKINDIA':'1214721','BATAINDIA':'94977','BEL':'98049','BEML':'101121','BERGEPAINT':'103425','BHARATFIN':'4995329','BHARATFORG':'108033','BHARTIARTL':'2714625','BHEL':'112129','BIOCON':'2911489','BOSCHLTD':'558337','BPCL':'134657','BRITANNIA':'140033','CADILAHC':'2029825','CANBK':'2763265','CANFINHOME':'149249','CAPF':'3903745','CASTROLIND':'320001','CEATLTD':'3905025','CENTURYTEX':'160001','CESC':'160769','CGPOWER':'194561','CHENNPETRO':'524545','CHOLAFIN':'175361','CIPLA':'177665','COALINDIA':'5215745','COLPAL':'3876097','CONCOR':'1215745','CUMMINSIND':'486657','DABUR':'197633','DALMIABHA':'5444865','DCBBANK':'3513601','DHFL':'215553','DISHTV':'3721473','DIVISLAB':'2800641','DLF':'3771393','DRREDDY':'225537','EICHERMOT':'232961','ENGINERSIN':'1256193','EQUITAS':'4314113','ESCORTS':'245249','EXIDEIND':'173057','FEDERALBNK':'261889','GAIL':'1207553','GLENMARK':'1895937','GMRINFRA':'3463169','GODFRYPHLP':'302337','GODREJCP':'2585345','GODREJIND':'2796801','GRANULES':'3039233','GRASIM':'315393','GSFC':'319233','HAVELLS':'2513665','HCC':'352001','HCLTECH':'1850625','HDFC':'340481','HDFCBANK':'341249','HEROMOTOCO':'345089','HEXAWARE':'2747905','HINDALCO':'348929','HINDPETRO':'359937','HINDUNILVR':'356865','HINDZINC':'364545','IBULHSGFIN':'7712001','ICICIBANK':'1270529','ICICIPRULI':'4774913','IDBI':'377857','IDEA':'3677697','IDFC':'3060993','IDFCBANK':'2863105','IFCI':'381697','IGL':'2883073','INDIACEM':'387841','INDIANB':'3663105','INDIGO':'2865921','INDUSINDBK':'1346049','INFIBEAM':'4159745','INFRATEL':'7458561','INFY':'408065','IOC':'415745','IRB':'3920129','ITC':'424961','JETAIRWAYS':'2997505','JINDALSTEL':'1723649','JISLJALEQS':'2661633','JPASSOCIAT':'2933761','JSWSTEEL':'3001089','JUBLFOOD':'4632577','JUSTDIAL':'7670273','KAJARIACER':'462849','KOTAKBANK':'492033','KPIT':'1790465','KSCL':'3832833','KTKBANK':'2061825','L&TFH':'6386689','LICHSGFIN':'511233','LT':'2939649','LUPIN':'2672641','M&M':'519937','M&MFIN':'3400961','MANAPPURAM':'4879617','MARICO':'1041153','MARUTI':'2815745','MCDOWELL-N':'2674433','MCX':'7982337','MFSL':'548353','MGL':'4488705','MINDTREE':'3675137','MOTHERSUMI':'1076225','MRF':'582913','MRPL':'584449','MUTHOOTFIN':'6054401','NATIONALUM':'1629185','NBCC':'8042241','NCC':'593665','NESTLEIND':'4598529','NHPC':'4454401','NIITTECH':'2955009','NMDC':'3924993','NTPC':'2977281','OFSS':'2748929','OIL':'4464129','ONGC':'633601','ORIENTBANK':'636673','PAGEIND':'3689729','PCJEWELLER':'7455745','PEL':'617473','PETRONET':'2905857','PFC':'3660545','PIDILITIND':'681985','PNB':'2730497','POWERGRID':'3834113','PTC':'2906881','PVR':'3365633','RAMCOCEM':'523009','RAYMOND':'731905','RBLBANK':'4708097','RCOM':'3375873','RECLTD':'3930881','RELCAPITAL':'737793','RELIANCE':'738561','RELINFRA':'141569','REPCOHOME':'7577089','RPOWER':'3906305','SAIL':'758529','SBIN':'779521','SHREECEM':'794369','SIEMENS':'806401','SOUTHBANK':'1522689','SREINFRA':'836353','SRF':'837889','SRTRANSFIN':'1102337','STAR':'1887745','SUNPHARMA':'857857','SUNTV':'3431425','SUZLON':'3076609','SYNDIBANK':'1837825','TATACHEM':'871681','TATACOMM':'952577','TATAELXSI':'873217','TATAGLOBAL':'878593','TATAMOTORS':'884737','TATAMTRDVR':'4343041','TATAPOWER':'877057','TATASTEEL':'895745','TCS':'2953217','TECHM':'3465729','TITAN':'897537','TORNTPHARM':'900609','TORNTPOWER':'3529217','TV18BRDCST':'3637249','TVSMOTOR':'2170625','UBL':'4278529','UJJIVAN':'4369665','ULTRACEMCO':'2952193','UNIONBANK':'2752769','UPL':'2889473','VEDL':'784129','VGUARD':'3932673','VOLTAS':'951809','WIPRO':'969473','WOCKPHARMA':'1921537','YESBANK':'3050241','ZEEL':'975873'}

#uptrend_settled_stocks = []
#Store downtrend settled stocks
#downtrend_settled_stocks = []
#Store range trading stocks
allpositivecount = 0
allnegativecount = 0
total_positive_success = 0
total_positive_open_success = 0
total_positive_firsthour_success = 0
total_positive_secondhour_success = 0
total_positive_thirdhour_success = 0
total_positive_fourthhour_success = 0
total_positive_fifthhour_success = 0
total_positive_sixthhour_success = 0
total_positive_endofday_success = 0
total_positive_nextdayfirsthour_success = 0
total_positive_nextdaysecondhour_success = 0
total_positive_nextdaythirdhour_success = 0
total_positive_nextdayfourthhour_success = 0
total_positive_nextdayfifthhour_success = 0
total_positive_nextdaysixthhour_success = 0
total_positive_endofnextday_success = 0
total_positive_failures = 0

total_negative_success = 0
total_negative_open_success = 0
total_negative_firsthour_success = 0
total_negative_secondhour_success = 0
total_negative_thirdhour_success = 0
total_negative_fourthhour_success = 0
total_negative_fifthhour_success = 0
total_negative_sixthhour_success = 0
total_negative_endofday_success = 0
total_negative_nextdayfirsthour_success = 0
total_negative_nextdaysecondhour_success = 0
total_negative_nextdaythirdhour_success = 0
total_negative_nextdayfourthhour_success = 0
total_negative_nextdayfifthhour_success = 0
total_negative_nextdaysixthhour_success = 0
total_negative_endofnextday_success = 0
total_negative_failures = 0

for codekey,codeval in dict_codes.items():
    print(codekey,":")
    #records = kite.historical_data(codeval, "2018-03-15", "2018-08-16", "day")
    try:
        records = kite.historical_data(codeval, "2018-05-16", "2018-08-17", "hour")
    except Exception as e:
        try:
            records = kite.historical_data(codeval, "2018-05-16", "2018-08-17", "hour")
        except Exception as e:
            try:
                records = kite.historical_data(codeval, "2018-05-16", "2018-08-17", "hour")
            except Exception as e:
                print("Third timeout occured for ", codekey)
                continue
        #print("Timeout occured for ", codekey)
        #continue
    #records = kite.historical_data(codeval, "2018-08-06", "2018-08-16", "15minute")
    #records = kite.historical_data(codeval, "2018-08-13", "2018-08-16", "5minute")
    #dict_charts = {'records1':records1,'recordsh':recordsh,'records15':records15,'records5':records5}
    #print(len(records))
    current_record_count = 0
    date_record_count = 0
    candle_length = 0
    candle_heights = []
    allpositive = False
    allnegative = False
    total_records = len(records)
    avg_candle_length = getaverageheight(records)
    tenpercandle = (avg_candle_length)*1
    for record in records:
        current_record_count += 1
        date_record_count += 1
        if(date_record_count < (total_records-14)):
            if(current_record_count >= 4):
                candle_length = record["close"] - record["open"]
                candles_heights.append(candle_length)
            if(current_record_count == 7):
                allpositive = checkallpositive(candles_heights)
                allnegative = checkallnegative(candles_heights)
                cur_candle_height = currentcandleheight(record["open"],record["close"])
                #print(current_record_count)
                #print(date_record_count)
                if(allpositive):# and cur_candle_height < tenpercandle):
                    allpositivecount += 1
                    current_day_close = record['close']
                    next_day_open = records[date_record_count]['open']
                    next_day_firsthour_close = records[date_record_count]['close']
                    next_day_secondhour_close = records[date_record_count+1]['close']
                    next_day_thirdhour_close = records[date_record_count+2]['close']
                    next_day_fourthhour_close = records[date_record_count+3]['close']
                    next_day_fifthhour_close = records[date_record_count+4]['close']
                    next_day_sixthhour_close = records[date_record_count+5]['close']
                    next_day_endofday_close = records[date_record_count+6]['close']
                    next_day_nextdayfirsthour_close = records[date_record_count+7]['close']
                    next_day_nextdaysecondhour_close = records[date_record_count+8]['close']
                    next_day_nextdaythirdhour_close = records[date_record_count+9]['close']
                    next_day_nextdayfourthhour_close = records[date_record_count+10]['close']
                    next_day_nextdayfifthhour_close = records[date_record_count+11]['close']
                    next_day_nextdaysixthhour_close = records[date_record_count+12]['close']
                    next_day_endofnextday_close = records[date_record_count+13]['close']
                    
                    if(next_day_open < current_day_close):
                        total_positive_success += 1
                        total_positive_open_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at open: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_firsthour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_firsthour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at first hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_secondhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_secondhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at second hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_thirdhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_thirdhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at third hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_fourthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_fourthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at fourth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_fifthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_fifthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at fifth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_sixthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_sixthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at fifth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_endofday_close < current_day_close):
                        total_positive_success += 1
                        total_positive_endofday_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at end of day: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_nextdayfirsthour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdayfirsthour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day first hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_nextdaysecondhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdaysecondhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day second hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_nextdaythirdhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdaythirdhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day third hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                    elif(next_day_nextdayfourthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdayfourthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day fourth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_nextdayfifthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdayfifthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day fifth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_nextdaysixthhour_close < current_day_close):
                        total_positive_success += 1
                        total_positive_nextdaysixthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at nextday sixth hour: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    elif(next_day_endofnextday_close < current_day_close):
                        total_positive_success += 1
                        total_positive_endofnextday_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at end of next day: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)                    
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")    
                    else:
                        total_positive_failures += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Fail: All Positive, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",current_day_close-next_day_open,"Close Diff: ",current_day_close-next_day_firsthour_close,"\n")
                if(allnegative):# and cur_candle_height < tenpercandle):
                    allnegativecount += 1
                    current_day_close = record['close']
                    next_day_open = records[date_record_count]['open']
                    next_day_firsthour_close = records[date_record_count]['close']
                    next_day_secondhour_close = records[date_record_count+1]['close']
                    next_day_thirdhour_close = records[date_record_count+2]['close']
                    next_day_fourthhour_close = records[date_record_count+3]['close']
                    next_day_fifthhour_close = records[date_record_count+4]['close']
                    next_day_sixthhour_close = records[date_record_count+5]['close']
                    next_day_endofday_close = records[date_record_count+6]['close']
                    next_day_nextdayfirsthour_close = records[date_record_count+7]['close']
                    next_day_nextdaysecondhour_close = records[date_record_count+8]['close']
                    next_day_nextdaythirdhour_close = records[date_record_count+9]['close']
                    next_day_nextdayfourthhour_close = records[date_record_count+10]['close']
                    next_day_nextdayfifthhour_close = records[date_record_count+11]['close']
                    next_day_nextdaysixthhour_close = records[date_record_count+12]['close']
                    next_day_endofnextday_close = records[date_record_count+13]['close']
                    if(next_day_open > current_day_close):
                        total_negative_success += 1
                        total_negative_open_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at open: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_firsthour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_firsthour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at first hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_secondhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_secondhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at second hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_thirdhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_thirdhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at third hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_fourthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_fourthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at fourth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_fifthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_fifthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at fifth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_sixthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_sixthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at sixth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_endofday_close > current_day_close):
                        total_negative_success += 1
                        total_negative_endofday_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at end of day: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdayfirsthour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdayfirsthour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day first hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdaysecondhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdaysecondhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day second hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdaythirdhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdaythirdhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day third hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdayfourthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdayfourthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day fourth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdayfifthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdayfifthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day fifth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_nextdaysixthhour_close > current_day_close):
                        total_negative_success += 1
                        total_negative_nextdaysixthhour_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at next day sixth hour: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    elif(next_day_endofnextday_close > current_day_close):
                        total_negative_success += 1
                        total_negative_endofnextday_success += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Success at end of next day: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                    else:
                        total_negative_failures += 1
                        print("Current Day: ",str(record['date']).split(" ")[0])
                        print("Next Day: ",str(records[date_record_count]['date']).split(" ")[0])
                        print("Fail: All Negative, Current Day Close: ",current_day_close," , Next Day Open: ",next_day_open," , Next Day First Hour Close: ",next_day_firsthour_close)
                        print("Open Diff: ",next_day_open-current_day_close,"Close Diff: ",next_day_firsthour_close-current_day_close,"\n")
                current_record_count = 0
                candles_heights = []
                allpositive = False
                allnegative = False
print("Total Positive Count:", allpositivecount)
print("Total Negative Count:", allnegativecount)
print("Total Positive Successes: ",total_positive_success)
print("Total Positive Open Successes: ",total_positive_open_success)
print("Total Positive First Hour Successes: ",total_positive_firsthour_success)
print("Total Positive Second Hour Successes: ",total_positive_secondhour_success)
print("Total Positive Third Hour Successes: ",total_positive_thirdhour_success)
print("Total Positive Fourth Hour Successes: ",total_positive_fourthhour_success)
print("Total Positive Fifth Hour Successes: ",total_positive_fifthhour_success)
print("Total Positive Sixth Hour Successes: ",total_positive_sixthhour_success)
print("Total Positive End of Day Successes: ",total_positive_endofday_success)
print("Total Positive Next Day First Hour Successes: ",total_positive_nextdayfirsthour_success)
print("Total Positive Next Day Second Hour Successes: ",total_positive_nextdaysecondhour_success)
print("Total Positive Next Day Third Hour Successes: ",total_positive_nextdaythirdhour_success)
print("Total Positive Next Day Fourth Hour Successes: ",total_positive_nextdayfourthhour_success)
print("Total Positive Next Day Fifth Hour Successes: ",total_positive_nextdayfifthhour_success)
print("Total Positive Next Day Sixth Hour Successes: ",total_positive_nextdaysixthhour_success)
print("Total Positive End of Next Day Successes: ",total_positive_endofnextday_success)
print("Total Positive Failures: ",total_positive_failures)

print("Total Positive Success %: ",(total_positive_success/allpositivecount)*100)
print("Total Positive Failure %: ",(total_positive_failures/allpositivecount)*100)

print("Total Negative Successes: ",total_negative_success)
print("Total Negative Open Successes: ",total_negative_open_success)
print("Total Negative First Hour Successes: ",total_negative_firsthour_success)
print("Total Negative Second Hour Successes: ",total_negative_secondhour_success)
print("Total Negative Third Hour Successes: ",total_negative_thirdhour_success)
print("Total Negative Fourth Hour Successes: ",total_negative_fourthhour_success)
print("Total Negative Fifth Hour Successes: ",total_negative_fifthhour_success)
print("Total Negative Sixth Hour Successes: ",total_negative_sixthhour_success)
print("Total Negative End of Day Successes: ",total_negative_endofday_success)
print("Total Negative Next Day First Hour Successes: ",total_negative_nextdayfirsthour_success)
print("Total Negative Next Day Second Hour Successes: ",total_negative_nextdaysecondhour_success)
print("Total Negative Next Day Third Hour Successes: ",total_negative_nextdaythirdhour_success)
print("Total Negative Next Day Fourth Hour Successes: ",total_negative_nextdayfourthhour_success)
print("Total Negative Next Day Fifth Hour Successes: ",total_negative_nextdayfifthhour_success)
print("Total Negative Next Day Sixth Hour Successes: ",total_negative_nextdaysixthhour_success)
print("Total Negative End of Next Day Successes: ",total_negative_endofnextday_success)
print("Total Negative Failures: ",total_negative_failures)

print("Total Negative Success %: ",(total_negative_success/allnegativecount)*100)
print("Total Negative Failure %: ",(total_negative_failures/allnegativecount)*100)

print(datetime.datetime.now(),"\n")
    #print(*records, sep = "\n")
    #print(str(records[0]['date']).split(" ")[0])
